#!/bin/bash

# Hive 小文件治理平台 - 强制测试仪表板更新规则
# 每次提交前必须更新测试仪表板数据

set -e

echo "🔍 执行强制测试仪表板更新检查..."
echo "═══════════════════════════════════════"

# 检查测试仪表板集成服务是否运行
TEST_SERVICE_URL="http://localhost:3001/api/health"
FRONTEND_URL="http://localhost:3002"

echo "📡 检查测试仪表板服务状态..."

# 检查API服务
if ! curl -s -f "$TEST_SERVICE_URL" > /dev/null 2>&1; then
    echo "❌ 测试仪表板API服务未运行！"
    echo "💡 请先启动服务："
    echo "   cd frontend && node test-dashboard-integration.js &"
    echo ""
    echo "🚫 提交被阻止 - 测试仪表板服务必须运行"
    exit 1
fi

echo "✅ 测试仪表板API服务正常运行"

# 检查前端服务
if ! curl -s -f "$FRONTEND_URL" > /dev/null 2>&1; then
    echo "❌ 前端开发服务器未运行！"
    echo "💡 请先启动服务："
    echo "   cd frontend && npm run dev &"
    echo ""
    echo "🚫 提交被阻止 - 前端服务必须运行"
    exit 1
fi

echo "✅ 前端开发服务器正常运行"

# 强制刷新测试数据
echo "🔄 强制刷新测试仪表板数据..."

REFRESH_RESULT=$(curl -s -X POST "http://localhost:3001/api/test/refresh")
if [[ $? -ne 0 ]]; then
    echo "❌ 测试数据刷新失败！"
    echo "🚫 提交被阻止 - 必须成功更新测试仪表板"
    exit 1
fi

echo "✅ 测试数据刷新成功"

# 获取最新测试统计
echo "📊 获取最新测试统计..."
OVERVIEW=$(curl -s "http://localhost:3001/api/test/overview")
TOTAL_TESTS=$(echo "$OVERVIEW" | jq -r '.data.totalTests // 0')
SUCCESS_RATE=$(echo "$OVERVIEW" | jq -r '.data.successRate // 0')

echo "═══════════════════════════════════════"
echo "📈 当前测试状态："
echo "   总测试数: $TOTAL_TESTS"
echo "   成功率: ${SUCCESS_RATE}%"
echo "   仪表板地址: http://localhost:3002/#/test-dashboard"
echo "═══════════════════════════════════════"

# 检查最低测试覆盖率要求（可选）
MIN_SUCCESS_RATE=30
if [[ $SUCCESS_RATE -lt $MIN_SUCCESS_RATE ]]; then
    echo "⚠️  警告：测试成功率 (${SUCCESS_RATE}%) 低于最低要求 (${MIN_SUCCESS_RATE}%)"
    echo "💡 建议提高测试质量后再提交"
    # 这里可以设置为强制失败：exit 1
fi

# 记录测试仪表板更新时间戳
echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" > .last-dashboard-update

echo "✅ 测试仪表板更新完成 - 允许提交"
echo ""