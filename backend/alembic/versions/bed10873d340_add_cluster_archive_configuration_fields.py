"""add_cluster_archive_configuration_fields

Revision ID: bed10873d340
Revises: 181b32d53423
Create Date: 2025-09-17 15:53:47.921432

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bed10873d340'
down_revision: Union[str, Sequence[str], None] = '181b32d53423'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('clusters', sa.Column('archive_enabled', sa.Boolean(), nullable=True))
    op.add_column('clusters', sa.Column('archive_root_path', sa.String(length=500), nullable=True))
    op.add_column('clusters', sa.Column('cold_data_threshold_days', sa.Integer(), nullable=True))
    op.add_column('clusters', sa.Column('auto_archive_enabled', sa.Boolean(), nullable=True))
    op.add_column('clusters', sa.Column('archive_compression_enabled', sa.Boolean(), nullable=True))
    # Skip JSON type change for SQLite compatibility
    # op.alter_column('task_logs', 'details',
    #           existing_type=sa.TEXT(),
    #           type_=sa.JSON(),
    #           existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip JSON type change for SQLite compatibility
    # op.alter_column('task_logs', 'details',
    #           existing_type=sa.JSON(),
    #           type_=sa.TEXT(),
    #           existing_nullable=True)
    op.drop_column('clusters', 'archive_compression_enabled')
    op.drop_column('clusters', 'auto_archive_enabled')
    op.drop_column('clusters', 'cold_data_threshold_days')
    op.drop_column('clusters', 'archive_root_path')
    op.drop_column('clusters', 'archive_enabled')
    # ### end Alembic commands ###
