"""enhance_task_logs_table_with_detailed_fields

Revision ID: cae1488b11f0
Revises: e6490a25d646
Create Date: 2025-09-13 10:12:05.087422

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cae1488b11f0"
down_revision: Union[str, Sequence[str], None] = "e6490a25d646"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("task_logs", sa.Column("phase", sa.String(length=50), nullable=True))
    op.add_column("task_logs", sa.Column("duration_ms", sa.Integer(), nullable=True))
    op.add_column("task_logs", sa.Column("sql_statement", sa.Text(), nullable=True))
    op.add_column("task_logs", sa.Column("affected_rows", sa.Integer(), nullable=True))
    op.add_column("task_logs", sa.Column("files_before", sa.Integer(), nullable=True))
    op.add_column("task_logs", sa.Column("files_after", sa.Integer(), nullable=True))
    op.add_column("task_logs", sa.Column("hdfs_stats", sa.JSON(), nullable=True))
    op.add_column(
        "task_logs",
        sa.Column("yarn_application_id", sa.String(length=100), nullable=True),
    )
    op.add_column(
        "task_logs", sa.Column("progress_percentage", sa.Float(), nullable=True)
    )
    # Note: SQLite doesn't support ALTER COLUMN type change, JSON will be stored as TEXT
    # The details column will remain as TEXT but will store JSON strings
    op.create_index(op.f("ix_task_logs_phase"), "task_logs", ["phase"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_task_logs_phase"), table_name="task_logs")
    # Skip details column type change for SQLite compatibility
    op.drop_column("task_logs", "progress_percentage")
    op.drop_column("task_logs", "yarn_application_id")
    op.drop_column("task_logs", "hdfs_stats")
    op.drop_column("task_logs", "files_after")
    op.drop_column("task_logs", "files_before")
    op.drop_column("task_logs", "affected_rows")
    op.drop_column("task_logs", "sql_statement")
    op.drop_column("task_logs", "duration_ms")
    op.drop_column("task_logs", "phase")
    # ### end Alembic commands ###
