version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: hive-platform-db
    environment:
      POSTGRES_DB: hive_small_file_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hive-platform

  redis:
    image: redis:6-alpine
    container_name: hive-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hive-platform

  api:
    image: ${IMAGE_API:-hive-small-file-api}:${VERSION:-latest}
    container_name: hive-platform-api
    env_file:
      - backend/.env
    environment:
      # 强制生产关键变量（如 .env 未配置）
      - SENTRY_ENVIRONMENT=production
      - AUTO_CREATE_SCHEMA=false
      - RELOAD=false
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    networks:
      - hive-platform

  celery-worker:
    image: ${IMAGE_API:-hive-small-file-api}:${VERSION:-latest}
    container_name: hive-platform-worker
    command: celery -A app.scheduler.celery_app worker --loglevel=info --concurrency=4
    env_file:
      - backend/.env
    environment:
      - SENTRY_ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    networks:
      - hive-platform

  celery-beat:
    image: ${IMAGE_API:-hive-small-file-api}:${VERSION:-latest}
    container_name: hive-platform-beat
    command: celery -A app.scheduler.celery_app beat --loglevel=info
    env_file:
      - backend/.env
    environment:
      - SENTRY_ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    networks:
      - hive-platform

  frontend:
    image: ${IMAGE_FE:-hive-small-file-frontend}:${VERSION:-latest}
    container_name: hive-platform-frontend
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - hive-platform

volumes:
  postgres_data:
  redis_data:

networks:
  hive-platform:
    driver: bridge

