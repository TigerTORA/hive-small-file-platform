name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    name: Backend · Python tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run backend tests (CI)
        working-directory: backend
        run: |
          python -m pytest -m "not integration" \
            --cov=app --cov-report=xml:coverage.xml --cov-fail-under=75 -v \
            --maxfail=5 --tb=short

      - name: Upload backend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage.xml

  frontend:
    name: Frontend · Build & tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: frontend
        run: |
          npm install --no-audit --no-fund

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Run frontend unit tests
        working-directory: frontend
        run: npm run test:run

  status:
    name: Project status report
    runs-on: ubuntu-latest
    needs: [ backend, frontend ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage artifacts
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: .

      # Frontend coverage is currently not enforced; can be added later

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Generate status
        run: |
          make status

      - name: Upload status artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: project-status
          path: |
            PROJECT_STATUS.md
            project_status.json
