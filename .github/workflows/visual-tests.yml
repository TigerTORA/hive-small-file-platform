name: Visual Regression Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/visual-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/visual-tests.yml'

jobs:
  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hive_small_file_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Install Frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Playwright browsers
        run: |
          cd frontend
          npx playwright install --with-deps chromium webkit

      - name: Setup test database
        run: |
          cd backend
          export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/hive_small_file_db"
          export REDIS_URL="redis://localhost:6379/0"
          alembic upgrade head

      - name: Start backend server
        run: |
          cd backend
          export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/hive_small_file_db"
          export REDIS_URL="redis://localhost:6379/0"
          export DEMO_MODE=true
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 10
        env:
          PYTHONPATH: ${{ github.workspace }}/backend

      - name: Wait for backend
        run: |
          timeout 30s bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done'

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Start frontend server
        run: |
          cd frontend
          npm run preview -- --port 3000 --host 0.0.0.0 &
          sleep 5

      - name: Wait for frontend
        run: |
          timeout 30s bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

      - name: Run visual tests
        run: |
          cd frontend
          if [ -n "$PERCY_TOKEN" ]; then
            npm run test:visual
          else
            echo "PERCY_TOKEN not set, running tests without visual comparison"
            npm run test:visual:local
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-test-results
          path: |
            frontend/playwright-report-visual/
            frontend/test-results/
          retention-days: 7

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“¸ Visual regression tests failed. Please check the uploaded artifacts for details.'
            })